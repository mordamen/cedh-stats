import mongoose from 'mongoose';

// Define the card schema
const cardSchema = new mongoose.Schema({
  quantity: Number,
  boardType: String,
  finish: String,
  isFoil: Boolean,
  isAlter: Boolean,
  isProxy: Boolean,
  card: {
    id: String,
    uniqueCardId: String,
    scryfall_id: String,
    set: String,
    set_name: String,
    name: String,
    cn: String,
    layout: String,
    cmc: Number,
    type: String,
    type_line: String,
    oracle_text: String,
    mana_cost: String,
    colors: [String],
    color_indicator: [String],
    color_identity: [String],
    legalities: {
      standard: String,
      future: String,
      historic: String,
      gladiator: String,
      pioneer: String,
      explorer: String,
      modern: String,
      legacy: String,
      pauper: String,
      vintage: String,
      penny: String,
      commander: String,
      oathbreaker: String,
      brawl: String,
      historicbrawl: String,
      alchemy: String,
      paupercommander: String,
      duel: String,
      oldschool: String,
      premodern: String,
      predh: String,
    },
    frame: String,
    reserved: Boolean,
    digital: Boolean,
    foil: Boolean,
    nonfoil: Boolean,
    etched: Boolean,
    glossy: Boolean,
    rarity: String,
    border_color: String,
    colorshifted: Boolean,
    lang: String,
    latest: Boolean,
    has_multiple_editions: Boolean,
    has_arena_legal: Boolean,
    prices: {
      usd: Number,
      eur: Number,
      lastUpdatedAtUtc: String,
    },
    card_faces: [Object], // Array of card faces, if applicable
    artist: String,
    promo_types: [String],
    cardHoarderUrl: String,
    cardMarketUrl: String,
    tcgPlayerUrl: String,
    isArenaLegal: Boolean,
    released_at: String, // Date in ISO format
    edhrec_rank: Number,
    cardmarket_id: Number,
    tcgplayer_id: Number,
    reprint: Boolean,
    set_type: String,
    acorn: Boolean,
    image_seq: Number,
    cardTraderUrl: String,
    isToken: Boolean,
    defaultFinish: String,
  },
  useCmcOverride: Boolean,
  useManaCostOverride: Boolean,
  useColorIdentityOverride: Boolean,
  excludedFromColor: Boolean,
});

export default cardSchema;
